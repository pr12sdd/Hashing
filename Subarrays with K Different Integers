    int atmost(vector<int> nums,int k)
    {
       int i=0;
        int j=0;
        unordered_map<int,int> m;
        int count=0;
        while(i<nums.size())
        {
            m[nums[i]]++;
            while(m.size()>k)
            {
                auto temp=m.find(nums[j]);
                if(temp->second==1)
                {
                    m.erase(temp->first);
                }
                else
                {
                    m[temp->first]--;
                }
                j++;
            }
            count=count+(i-j+1);
            i++;
        }
        return count;
    }
    int subarraysWithKDistinct(vector<int>& nums, int k) {
        return atmost(nums,k)-atmost(nums,k-1);
    }
