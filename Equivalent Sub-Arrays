 int atmost(int arr[],int n,int k)
    {
        int i=0;
        int j=0;
        unordered_map<int,int> m;
        int count=0;
        while(j<n)
        {
            m[arr[j]]++;
            while(m.size()>k)
            {
                if(m[arr[i]]==1)
                {
                    m.erase(arr[i]);
                }
                else
                {
                    m[arr[i]]--;
                }
                i++;
            }
            count=count+(j-i+1);
            j++;
        }
        return count;
    }
    int countDistinctSubarray(int arr[], int n)
    {
        unordered_map<int,int> m;
        for(int i=0;i<n;i++)
        {
            m[arr[i]]++;
        }
        int k=m.size();
        return atmost(arr,n,k)-atmost(arr,n,k-1);
    }
